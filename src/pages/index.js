import React, { useState } from 'react';
import { Container, Row, Col, ButtonGroup, Button } from 'react-bootstrap';
import Head from 'next/head'
import { signInWithEmailAndPassword, signInWithGoogle } from '../lib/auth';
import { useUser } from '../contexts/UserContext';

import Image from 'next/image';
import { useRouter } from 'next/router' ;
import { auth } from '../lib/firebase';
import styles from '../styles/Home.module.css'
import Link from 'next/link';


function HomePage() {
  const {user} = useUser();

  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [error, setError] = useState('');

  const router = useRouter();

/*   const handleLogin = async (e) => {
    e.preventDefault();
    try {
      const { user, error } = await signInWithEmailAndPassword(email, password);
      if (user) {
        router.push('/dashboard');
      } else if (error) {
        setError(error.message);
      }
    } catch (error) {
      console.log(error);
      if (error.code === 'auth/wrong-password') {
        setError('Invalid credentials');
      } else {
      setError(error.message);
      }
    }
  };
 
  const handleGoogleSignIn = async () => {
    const { user, error } = await signInWithGoogle();
    if (user !== null){
    // user is signed 
    router.push('/dashboard');
  } else if (error) {
    // handle with error
setError(error.message);
  } 
}; */


  return (
     <>


       <Head>

        <title>FloralFlow App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
     
          <Container className={`${styles.main} py-5`}>     
      <Row className="justify-content-center">
        <Col xs={12} md={6} lg={4} className="text-center">

      


        {/* <Image src="/Logo.jpg" alt="Logo" width={100} height={50} /> */}
            {' '}        {/* <h1 className={`${styles.description} mt-3 mb-4`}>Login</h1> */}
{/*       <p className={`${styles.description} lead mb-4`}>
      Welcome back to FloralFlow!<br></br>
Please enter your email and password to access your account.          </p>
      {error && <p className={styles.error}>{error}</p>}
      <form onSubmit={handleLogin} className={styles.form}>
        <input
          type="email"
          placeholder="Email"
          value={email}
          onChange={(e) => setEmail(e.target.value)}
          className={styles.input}
        />
        <input
          type="password"
          placeholder="Password"
          value={password}
          onChange={(e) => setPassword(e.target.value)}
          className={styles.input}
        />
        <button type="submit" className={styles.input}>Login</button> */}
            <p className={`${styles.description} lead mb-4`}>

        FloralFlow is a progressive web app that helps retail floral department managers and employees manage inventory, reduce waste, and streamline workflows through effective process management.<br></br><br></br>
        </p>

        {user ? (
<Link href="https://floral487.gitbook.io/floral-clerk-manual/">Floral Clerk Manual</Link>

     ) : (
        <ButtonGroup>
  <Link href="/login"  className={`${styles.input}`}>Login</Link>
  <Link href="/register"  className={`${styles.input}`}>Register</Link>
</ButtonGroup>       
  )}
    </Col>
     </Row>
        </Container>
    
</>
  );
}


export default HomePage;